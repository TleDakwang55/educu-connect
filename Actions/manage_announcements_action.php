<?php
// Start the session
session_start();

// Include the database configuration file
include '../config/db.php'; // Adjust path as needed

// Include the functions file (if needed for any helper functions, e.g., validation)
include '../include/functions.php'; // Include the file containing connectDB()

// Check if the request method is POST
if ($_SERVER['REQUEST_METHOD'] == 'POST') {

    // Check if the 'action' parameter is set
    if (isset($_POST['action'])) {
        $action = $_POST['action'];

        // Get database connection
        $conn = connectDB(); // Assuming connectDB() function is available and returns connection

        // Check if database connection is successful
        if (!$conn) {
            $_SESSION['error_message'] = "ไม่สามารถเชื่อมต่อฐานข้อมูลเพื่อดำเนินการได้";
            // Redirect back to the manage announcements page
            // *** ตรวจสอบพาธนี้ให้ถูกต้องตามโครงสร้างโฟลเดอร์ของคุณ ***
            header("Location: ../admin/manage_announcements.php");
            exit();
        }

        switch ($action) {
            case 'add':
                // --- Handle Add Announcement Action ---
                // Get data from the form (from manage_announcements.php)
                $title = htmlspecialchars($_POST['title'] ?? '');
                $details = htmlspecialchars($_POST['details'] ?? ''); // Corresponds to 'details' column
                $date = htmlspecialchars($_POST['date'] ?? ''); // Corresponds to 'date' column
                $media = htmlspecialchars($_POST['media'] ?? ''); // Corresponds to 'media' column
                $created_at = htmlspecialchars($_POST['created_at'] ?? ''); // Get publisher name from the form

                // Basic validation (you might want more robust validation)
                if (empty($title) || empty($details) || empty($date) || empty($created_at)) { // Added created_at to validation
                    $_SESSION['error_message'] = "กรุณากรอกข้อมูลประกาศให้ครบถ้วน (หัวข้อ, รายละเอียด, วันที่, ผู้ประกาศ)";
                } else {
                    // Prepare SQL query to insert a new announcement into the 'news' table
                    // Ensure column names match your 'news' table: id, title, details, created_at, media, date, created_at
                    // 'id' and 'created_at' are typically auto-generated by the database
                    $insert_query = "INSERT INTO news (title, details, date, media, created_at) VALUES (?, ?, ?, ?, ?)"; // Added created_at column

                    // Prepare the statement
                    if ($stmt = $conn->prepare($insert_query)) {
                        // Bind parameters
                        // 'sssss' indicates that all 5 parameters are strings
                        // Adjust types based on your database column types if needed
                        $stmt->bind_param("sssss", $title, $details, $date, $media, $created_at); // Added $created_at to binding

                        // Execute the statement
                        if ($stmt->execute()) {
                            $_SESSION['success_message'] = "เพิ่มประกาศสำเร็จแล้ว";
                        } else {
                            $_SESSION['error_message'] = "เกิดข้อผิดพลาดในการเพิ่มประกาศ: " . $stmt->error;
                        }

                        // Close statement
                        $stmt->close();
                    } else {
                        $_SESSION['error_message'] = "เกิดข้อผิดพลาดในการเตรียมคำสั่งฐานข้อมูล (เพิ่มประกาศ): " . $conn->error;
                    }
                }
                break;

            case 'edit':
                // --- Handle Edit Announcement Action ---
                // Get data from the edit form (from edit_announcement.php)
                $announcement_id = htmlspecialchars($_POST['announcement_id'] ?? '');
                $updated_title = htmlspecialchars($_POST['title'] ?? '');
                $updated_details = htmlspecialchars($_POST['details'] ?? '');
                $updated_date = htmlspecialchars($_POST['date'] ?? '');
                $updated_media = htmlspecialchars($_POST['media'] ?? '');
                $updated_created_at = htmlspecialchars($_POST['created_at'] ?? ''); // Get updated publisher name

                // Basic validation
                if (empty($announcement_id) || !is_numeric($announcement_id) || empty($updated_title) || empty($updated_details) || empty($updated_date) || empty($updated_created_at)) { // Added updated_created_at to validation
                    $_SESSION['error_message'] = "ข้อมูลไม่ครบถ้วนสำหรับการแก้ไขประกาศ";
                } else {
                    // Prepare SQL query to update the announcement in the 'news' table
                    // Ensure column names match your 'news' table and the WHERE clause uses the correct ID column
                    $update_query = "UPDATE news SET title = ?, details = ?, date = ?, media = ?, created_at = ? WHERE id = ?"; // Added created_at column

                    // Prepare the statement
                    if ($stmt = $conn->prepare($update_query)) {
                        // Bind parameters
                        // 'sssssi' indicates 5 strings and 1 integer (the ID)
                        // Adjust types based on your database column types if needed
                        $stmt->bind_param("sssssi", $updated_title, $updated_details, $updated_date, $updated_media, $updated_created_at, $announcement_id); // Added $updated_created_at to binding

                        // Execute the statement
                        if ($stmt->execute()) {
                            // Check if any row was actually updated
                            if ($stmt->affected_rows > 0) {
                                $_SESSION['success_message'] = "แก้ไขประกาศสำเร็จแล้ว";
                            } else {
                                // This might mean the data was the same, or the ID wasn't found
                                $_SESSION['success_message'] = "ไม่มีการเปลี่ยนแปลงข้อมูล หรือไม่พบประกาศที่ต้องการแก้ไข";
                            }
                        } else {
                            $_SESSION['error_message'] = "เกิดข้อผิดพลาดในการแก้ไขประกาศ: " . $stmt->error;
                        }

                        // Close statement
                        $stmt->close();
                    } else {
                        $_SESSION['error_message'] = "เกิดข้อผิดพลาดในการเตรียมคำสั่งฐานข้อมูล (แก้ไขประกาศ): " . $conn->error;
                    }
                }
                break;

            case 'delete':
                // --- Handle Delete Announcement Action ---
                // Get the announcement ID from the form (from manage_announcements.php table)
                $announcement_id = $_POST['announcement_id'] ?? null; // Name from the hidden input in the delete form

                // Basic validation
                if ($announcement_id === null || !is_numeric($announcement_id)) {
                    $_SESSION['error_message'] = "ไม่พบรหัสประกาศที่ต้องการลบ";
                } else {
                    // Prepare SQL query to delete an announcement from the 'news' table
                    $delete_query = "DELETE FROM news WHERE id = ?"; // Delete based on 'id' column

                    // Prepare the statement
                    if ($stmt = $conn->prepare($delete_query)) {
                        // Bind parameter (assuming announcement ID is integer)
                        $stmt->bind_param("i", $announcement_id);

                        // Execute the statement
                        if ($stmt->execute()) {
                            // Check if any row was actually deleted
                            if ($stmt->affected_rows > 0) {
                                $_SESSION['success_message'] = "ลบประกาศสำเร็จแล้ว";
                            } else {
                                $_SESSION['error_message'] = "ไม่พบประกาศที่ต้องการลบ (อาจถูกลบไปแล้ว)";
                            }
                        } else {
                            $_SESSION['error_message'] = "เกิดข้อผิดพลาดในการลบประกาศ: " . $stmt->error;
                        }

                        // Close statement
                        $stmt->close();
                    } else {
                        $_SESSION['error_message'] = "เกิดข้อผิดพลาดในการเตรียมคำสั่งฐานข้อมูล (ลบประกาศ): " . $conn->error;
                    }
                }
                break;

            default:
                // Handle unknown action
                $_SESSION['error_message'] = "การดำเนินการไม่ถูกต้อง";
                break;
        }

        // Close database connection after all operations are done
        if (isset($conn) && $conn) {
            $conn->close();
        }

    } else {
        // 'action' parameter is not set
        $_SESSION['error_message'] = "ไม่ระบุการดำเนินการ";
    }

    // Redirect back to the manage announcements page after processing
    // *** ตรวจสอบพาธนี้ให้ถูกต้องตามโครงสร้างโฟลเดอร์ของคุณ ***
    header("Location: ../admin/manage_announcements.php");
    exit();

} else {
    // If the request method is not POST, redirect to the manage announcements page
    // or an error page
    // *** ตรวจสอบพาธนี้ให้ถูกต้องตามโครงสร้างโฟลเดอร์ของคุณ ***
    header("Location: ../admin/manage_announcements.php");
    exit();
}
?>
